#+TITLE: Implementation notes


* TODO-list

** TODO hardware-configuration.nix?
** TODO how to look up available packages?


#+begin_example
nix-env -f '<nixpkgs>' -iA emacs
#+end_example

- Are there any shorter commands?
- look up packages?
  - nix search wget
  - FIXME nix-env -qA emacs

** TODO stumpwm
1. the WM is installed using wm.stumpwm.enable = true, thus I must make my
   stumpwm package overwrite globally. This is defined in
   nixpkgs/nixos/modules/services/x11/window-managers/stumpwm.nix

2. there are two piece of definition.
   - nixpkgs/pkgs/development/lisp-modules/quicklisp-to-nix-output/stumpwm.nix,
     and this seems to be lispPackages.stumpwm?
   - nixpkgs/pkgs/applications/window-managers/stumpwm/default.nix, which should
     not be lispPackages.stumpwm, then what is it?

The lisp system support seems to be pretty bad. I probably just stick with guix
and work out the non-free staff and linux kernel.

Currently, I cannot build all lispPackages.XXX, with the error

#+begin_example
/nix/store/whpnlfj79vd8p175rp1bwg0x7wz5lmj1-stdenv-linux/setup: line 320: [@]: bad substitution
#+end_example

I ran the following command in local nixpkgs root:
#+begin_example
nix-build -A lispPackages.cl-ppcre
#+end_example

It looks like it recovered when I reboot the system.

I can clone a local nixpkgs tree, and build the system using it via

#+begin_example
nixos-rebuild switch -I nixpkgs=/path/to/nixpkgs
#+end_example

But now I'm using the master branch, all packages would be upgraded. This is
typically not what I want, because I would need to build tons of staff from
source. The right way would be to override just this package. How to do that?

It does not look easy to extract out, nor overwrite, as it compose with many nix
scritps to generate a lisp package. If modify in place, the `which stumpwm`
returns the path with actually the correct clx-truetype set, but still cannot
load. I'm trying restart the system, if still not working, I'll not use NixOS
because the nix language and the offical nikpkgs is not well structured.

** TODO multiple DE
** TODO nvidia driver
** TODO sway
The border feature.
** DPI
** libinput natural scroll


* References
- https://github.com/michaelpj/nixos-config
- https://github.com/Tmplt/nixos-config: wlan, secrets
- https://github.com/benley/dotfiles many machines, many dot files, pretty good
- https://nixos.wiki/wiki/Configuration_Collection
